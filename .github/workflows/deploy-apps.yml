name: Deploy Apps

on:
  deployment:

env:
  DEPLOY_APPS: -l name=server -l name=prover -l name=explorer

jobs:
  pre:
    runs-on: [k8s, stage]
    steps:
      - uses: actions/checkout@v2
      -
        id: print
        run: echo "::set-output name=shortRev::$(git rev-parse --short HEAD)"
      -
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.ref }}
          regex: '^refs\/tags\/(v[0-9]+\.[0-9]+\.[0-9](-?.*)?)$'
      -
        name: Map runtime environment data
        uses: kanga333/variable-mapper@v0.2.0
        with:
          key: "${{ github.event.deployment.environment }}"
          map: |
            {
              "mainnet": {
                "KUBECONF": "KUBECONF_MAINNET",
                "HFENV": "zksync-prod",
                "RUNNER": "mainnet"
              },
              "rinkeby": {
                "KUBECONF": "KUBECONF_TESTNET",
                "HFENV": "zksync-${{ github.event.deployment.environment }}",
                "RUNNER": "testnet"
              },
              "ropsten": {
                "KUBECONF": "KUBECONF_TESTNET",
                "HFENV": "zksync-${{ github.event.deployment.environment }}",
                "RUNNER": "testnet"
              },
              ".*": {
                "KUBECONF": "KUBECONF_STAGE",
                "HFENV": "zksync-${{ github.event.deployment.environment }}",
                "RUNNER": "stage"
              }
            }
      -
        name: Cancel deployment (deployment tag missmatch)
        if: ${{ steps.regex-match.outputs.group1 == '' }}
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          state: failure
          deployment_id: ${{ github.event.deployment.id }}

    outputs:
      shortRev: ${{ steps.print.outputs.shortRev }}
      kubeConf: ${{ env.KUBECONF }}
      hfEnv: ${{ env.HFENV }}
      runner: ${{ env.RUNNER }}
      isTag: ${{ steps.regex-match.outputs.group1 != '' }}

  deploy:
    name: Deploy Apps
    runs-on: [k8s, deployer, "${{ needs.pre.outputs.runner }}"]
    needs: pre
    if: ${{ needs.pre.outputs.isTag == 'true' }}

    container:
      image: dysnix/kubectl:v1.16-gcloud

    env:
      IMAGE_TAG: ${{ needs.pre.outputs.shortRev }}
      KUBECONF: ${{ secrets[needs.pre.outputs.kubeConf] }}
      HFENV: ${{ needs.pre.outputs.hfEnv }}

    steps:
      -
        name: Create ~/.kube/config
        run: mkdir -p ~/.kube && echo "$KUBECONF" | base64 -d > ~/.kube/config
      -
        name: Clone helm-infra
        uses: actions/checkout@v2
        with:
          repository: matter-labs/helm-infra
          path: helm-infra
          ref: master
          token: ${{ secrets.GH_TOKEN }}
      -
        name: Deploy apps
        working-directory: helm-infra
        run: |
          ## copy helm plugins over (from dysnix/kubectl, don't forget)!!!
          cp -r /dysnix/kubectl/.local /dysnix/kubectl/.cache ~

          UPDATE_REPOS=y helmfile -e $HFENV repos
          helmfile -e $HFENV $DEPLOY_APPS apply --args "timeout 180s"
      -
        name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          state: success
          deployment_id: ${{ github.event.deployment.id }}
      -
        name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          state: failure
          deployment_id: ${{ github.event.deployment.id }}
      -
        name: Notify to Mattermost (on failure)
        uses: tferreira/matterfy@releases/v1
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: '*Deployment to "${{ github.event.deployment.environment }}" failed*'
          icon_emoji: octocat
          channel: 'matterlabs-alerts'
          url: ${{ secrets.MATTERMOST_WEBHOOK }}
