name: CI

on:
  pull_request:
  push:
    branches:
    - staging
    - trying

jobs:
  lint:
    runs-on: [self-hosted, CI-worker]

    steps:
      - uses: actions/checkout@v2

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH

      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml up --build -d zk
          ci_run sccache --start-server

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH

      - name: lints
        run: |
          ci_run zk
          ci_run zk fmt --check
          ci_run zk lint rust --check
          ci_run zk lint js --check
          ci_run zk lint ts --check
          ci_run zk lint md --check

  unit-tests:
    runs-on: [self-hosted, CI-worker]

    steps:
      - uses: actions/checkout@v2

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
        
      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml pull
          docker-compose -f docker-compose-runner.yml up --build -d geth postgres zk
          ci_run sccache --start-server

      - name: init
        run: |
          ci_run ln -s /usr/src/keys/setup keys/setup
          ci_run zk
          ci_run zk run verify-keys unpack
          ci_run zk contract build
          ci_run zk run deploy-erc20 dev
          ci_run zk run deploy-eip1271
          ci_run zk db basic-setup
          ci_run zk run yarn

      - name: liquidity-token
        run: docker-compose -f docker-compose-runner.yml restart dev-liquidity-token-watcher

      - name: contracts-unit-tests
        run: ci_run zk test contracts

      - name: js-unit-tests
        run: ci_run zk test js

      - name: rust-unit-tests
        run: ci_run zk test rust

  integration:
    runs-on: [self-hosted, FAST]

    steps:
      - uses: actions/checkout@v2

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
        
      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml pull
          docker-compose -f docker-compose-runner.yml up --build -d geth postgres zk
          ci_run sccache --start-server

      - name: init
        run: |
          ci_run ln -s /usr/src/keys/setup keys/setup
          ci_run zk
          ci_run zk dummy-prover enable --no-redeploy
          ci_run zk init

      - name: liquidity-token
        run: docker-compose -f docker-compose-runner.yml restart dev-liquidity-token-watcher

      - name: run-services
        run: |
          ci_run zk server &>server.log &
          ci_run sleep 1
          ci_run zk dummy-prover run &>dummy_prover.log &
          ci_run sleep 10

      - name: integration-server
        run: ci_run zk test i server

      - name: integration-api
        run: ci_run zk test i api

      - name: integration-zcli
        run: ci_run zk test i zcli

      - name: integration-rust-sdk
        run: ci_run zk test i rust-sdk
      
      - name: integration-withdrawal-helpers
        run: ci_run zk test i withdrawal-helpers

      - name: Show logs
        if: always()
        run: |
          ci_run cat server.log
          ci_run cat dummy_prover.log


  testkit:
    runs-on: [self-hosted, CI-worker]

    steps:
      - uses: actions/checkout@v2

      - name: prepare
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo PLUGIN_CONFIG=fast >> $GITHUB_ENV # use fast mode for geth image (instant tx commit)

      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml pull
          docker-compose -f docker-compose-runner.yml up --build -d zk
          ci_run sccache --start-server

      - name: init
        run: |
          ci_run ln -s /usr/src/keys/setup keys/setup
          ci_run zk
          ci_run zk run verify-keys unpack
          ci_run zk contract build

      - name: integration-testkit
        run: ci_run zk test integration testkit --offline
